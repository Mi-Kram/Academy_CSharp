@model Main.Models.RegisterViewModel
@{
	ViewBag.Title = "Регистрация";
	ViewBag.IsLogin = false;
}

<script>
	function OnSuccessForm(data) {
		var url = $('#urlPathForm').val();
		if (url) location.href = url;
	}
</script>


<div class="container">
	@using (Ajax.BeginForm("TryRegister", "Account", null, new AjaxOptions
	{
		UpdateTargetId = "RegisterFormContent",
		HttpMethod = "POST",
		OnSuccess = "OnSuccessForm"
	}, new { @enctype = "multipart/form-data" }))
	{
		<h2>Регистрация</h2>

		<div id="RegisterFormContent">
			@Html.AntiForgeryToken()
			@Html.ValidationSummary(true, "")
			@Html.HiddenFor(x => x.url, new { id = "urlPathForm" })


			<div class="RegisterPhotoInput">
				@Html.TextBoxFor(m => m.Photo, new { @type = "file", @accept = "image/jpeg,image/jpg,image/bmp", @required = true, @id="PhotoInputID" })
				<div class="PhotoDiv">
					<div class="PhotoContentDiv">
						<div class="RegisterAddDivStyle">
							<ion-icon name="add-circle-outline"></ion-icon>
						</div>
						<img id="PhotoImgID" src="" alt="photo" />
						<ion-icon name="image-outline"></ion-icon>
					</div>
				</div>

				<script>
					$('#PhotoInputID').change(function (e) {
						$('#PhotoImgID').prop('src', URL.createObjectURL(e.target.files[0]));
					});

					$('.PhotoDiv').click(function (e) {
						$('#PhotoInputID').click();
					});
				</script>
			</div>
			<div class="FormInput">
				<ion-icon name="person-outline"></ion-icon>
				@Html.TextBoxFor(m => m.Login, new { @maxlength = "15", @placeholder = "login", @autocomplete = "off" })
			</div>
			@Html.ValidationMessageFor(m => m.Login, "", new { @class = "ErrorMessage" })

			<div class="FormInput">
				<ion-icon name="key-outline"></ion-icon>
				@Html.TextBoxFor(m => m.Password, new { @type = "password", @maxlength = "15", @placeholder = "password", @autocomplete = "off" })
				<div style="cursor: pointer;" onclick="ShowPassword()"><ion-icon name="eye-outline"></ion-icon></div>
			</div>
			@Html.ValidationMessageFor(m => m.Password, "", new { @class = "ErrorMessage" })

			<div class="FormInput">
				<ion-icon name="key-outline"></ion-icon>
				@Html.TextBoxFor(m => m.ConfirmPassword, new { @type = "password", @maxlength = "15", @placeholder = "confirm password", @autocomplete = "off" })
				<div style="cursor: pointer;" onclick="ShowPassword()"><ion-icon name="eye-outline"></ion-icon></div>
			</div>
			@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "ErrorMessage" })
		</div>

		<button class="FormButton" onclick="event.target.blur()">Register</button>
	}

	<script>
		$('.FormInput').click(function (e) {
			$(this).find('input').focus();
		});
	</script>

	<script>
		function ShowPassword() {
			$(event.target).find('ion-icon').attr('name', 'eye-off-outline');
			$(event.target).closest('.FormInput').find('input').attr('type', 'text');
			event.target.onclick = HidePassword;
		}

		function HidePassword() {
			$(event.target).find('ion-icon').attr('name', 'eye-outline');
			$(event.target).closest('.FormInput').find('input').attr('type', 'password');
			event.target.onclick = ShowPassword;
		}
	</script>
</div>
