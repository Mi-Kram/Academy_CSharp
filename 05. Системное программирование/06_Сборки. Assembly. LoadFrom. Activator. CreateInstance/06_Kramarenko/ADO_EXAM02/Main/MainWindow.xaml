<Window x:Class="Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Main"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded" Closing="Window_Closing">

    <Window.Resources>
        <Color x:Key="MyDarkGrayColor">#FF4E4E4E</Color>
        <Color x:Key="MyGrayColor">#FFa8a8a8</Color>
        <Color x:Key="MyLightGrayColor">#FFB3B3B3</Color>
        <Color x:Key="MyLightGrayColor2">#FFc9c9c9</Color>
        <Color x:Key="MyVeryLightGrayColor">#e0e0e0</Color>

        <SolidColorBrush x:Key="MyDarkGrayBrush" Color="#FF4E4E4E"/>
        <SolidColorBrush x:Key="MyLightGrayBrush" Color="#FFB3B3B3"/>

        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="Background" Value="Azure"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HorizontalGridLinesBrush" Value="DarkGray"/>
            <Setter Property="RowBackground" Value="LightGray"/>
            <Setter Property="AlternatingRowBackground" Value="White"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
        </Style>

        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                            <ItemsPresenter />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemStyle" TargetType="MenuItem">
            <Setter Property="FontSize" Value="18"/>
            <!--<Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Padding="5,0,5,0" CornerRadius="5" BorderThickness="3" BorderBrush="{StaticResource MyDarkGrayBrush}" Background="{StaticResource MyLightGrayBrush}">
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <!--<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MyDarkGrayColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked"/>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="{StaticResource MyLightGrayColor}" Offset="0" />
                            <GradientStop Color="{StaticResource MyDarkGrayColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="White" />
                                    <GradientStop Color="{StaticResource MyLightGrayColor}" Offset="1" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource MyVeryLightGrayColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="#FF444444"/>
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>-->

        <!--<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>-->

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <!--<Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />-->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />

            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2" Focusable="false" ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3"
                                Focusable="True" Background="Transparent" Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" Background="{TemplateBinding Background}">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MyDarkGrayColor}" />
                                        </Border.BorderBrush>
                                        --><!--<Border.Background>
                                            <SolidColorBrush Color="{StaticResource MyVeryLightGrayColor}" />
                                        </Border.Background>--><!--
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
        
        <Style x:Key="ComboBoxStyle2" TargetType="{x:Type ComboBox}">
            <!--<Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />-->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />

            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2" Focusable="false" ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3"
                                Focusable="True" Background="Transparent" Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup" Placement="Top" IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" Background="{TemplateBinding Background}">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource MyDarkGrayColor}" />
                                        </Border.BorderBrush>
                                        --><!--<Border.Background>
                                            <SolidColorBrush Color="{StaticResource MyVeryLightGrayColor}" />
                                        </Border.Background>--><!--
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <!--<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" CornerRadius="5" Padding="5,2,5,2" SnapsToDevicePixels="true" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MyGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MyLightGrayColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="{StaticResource MyLightGrayColor2}"
                                                            AutoReverse="False"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="Transparent"
                                                            AutoReverse="False"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Window.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid x:Name="QQ1" Grid.Row="0" Background="#FF9C9C9C">
            <ComboBox VerticalContentAlignment="Center" Panel.ZIndex="999" Name="tables_cmbBox" SelectedIndex="0" Width="140" FontSize="12" 
                      HorizontalAlignment="Left" Margin="0,2,0,2" SelectionChanged="tables_cmbBox_SelectionChanged" Style="{StaticResource ComboBoxStyle}">
                <ComboBox.Background>
                    <SolidColorBrush Color="{StaticResource MyVeryLightGrayColor}"/>
                </ComboBox.Background>
                <TextBlock Text="Departments"/>
                <TextBlock Text="Employees"/>
            </ComboBox>
            <Menu Background="Transparent">
                <MenuItem Name="editMenuItem" Margin="145,0,0,0" Header="Edit" Style="{StaticResource MenuItemStyle}">
                    <MenuItem Header="Add" Click="AddRow_Click"/>
                    <MenuItem Header="Edit" Click="EditRow_Click" />
                    <MenuItem Header="Remove" Click="RemoveRows_Click" />
                </MenuItem>
                <MenuItem Name="sortingMenuItem" Header="Sorting" Style="{StaticResource MenuItemStyle}">
                    <MenuItem Header="Отсортировать" Click="SortTable_Click"/>
                    <MenuItem Header="Отфильтровать" Click="FilterTable_Click" />
                    <MenuItem Header="Сгруппировать" Click="GroupTable_Click" />
                </MenuItem>
                <MenuItem Name="findMeniItem" Header="Find" Click="FindCell_Click" Style="{StaticResource MenuItemStyle}"/>
                <MenuItem Name="UnionMenuItem" Header="Union tables" Style="{StaticResource MenuItemStyle}" Click="UnionTables_Click"/>
            </Menu>
        </Grid>

        <DataGrid Visibility="Visible" x:Name="DepssDataGrid" Style="{StaticResource DataGridStyle}" CellEditEnding="CellEditEnding" PreviewKeyDown="PreviewKeyDown" BeginningEdit="DataGrid_BeginningEdit">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" />
                            <Setter Property="BorderThickness" Value="1.5,3"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Path Data="M 0,0 10,6 0,12 Z" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" StrokeThickness="0"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

            <DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}"/>
            </DataGrid.GroupStyle>

            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Департамент" Binding="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Адрес" Binding="{Binding Address, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Номер телефона" Binding="{Binding PhoneNumber, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid Visibility="Hidden" x:Name="EmplsDataGrid" Style="{StaticResource DataGridStyle}" CellEditEnding="CellEditEnding" PreviewKeyDown="PreviewKeyDown" BeginningEdit="DataGrid_BeginningEdit">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" />
                            <Setter Property="BorderThickness" Value="1.5,3"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Path Data="M 0,0 10,6 0,12 Z" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" StrokeThickness="0"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

            <DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}"/>
            </DataGrid.GroupStyle>
            
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Фото" Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Path=PhotoPath, UpdateSourceTrigger=PropertyChanged}">
                                <Image.ToolTip>
                                    <TextBlock Text="{Binding PhotoPath, UpdateSourceTrigger=PropertyChanged}"/>
                                </Image.ToolTip>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Имя" Binding="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Фамилия" Binding="{Binding LastName, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Возраст" Binding="{Binding Age, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Адрес" Binding="{Binding Address, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid Visibility="Hidden" x:Name="UnionDataGrid" Style="{StaticResource DataGridStyle}" BeginningEdit="UnionDataGrid_BeginningEdit">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" />
                            <Setter Property="BorderThickness" Value="1.5,3"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Path Data="M 0,0 10,6 0,12 Z" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=RowBackground}" StrokeThickness="0"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Имя" Binding="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Фамилия" Binding="{Binding LastName, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Департамент" Binding="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>

        <Grid x:Name="QQ2" Grid.Row="2" Background="#FF9C9C9C">
            <ComboBox Name="plugInCmbBox" Width="200" Margin="5,2,0,3" Style="{StaticResource ComboBoxStyle2}"
                      HorizontalAlignment="Left" SelectionChanged="ChangePlugIn_PlugInCmbBox"/>
        </Grid>
    </Grid>
</Window>
